@startuml

!theme plain
top to bottom direction
skinparam linetype ortho
'Split into 2 pages
page 4x4
skinparam pageMargin 10
skinparam class {
    BackgroundColor White
    ArrowColor Black
    BorderColor Black

}

    abstract class  Entity <<abstract>> {
      # frames: List<Integer>
      # velocityX: double
      # height: double
      # JUMP_STRENGTH: double
      # width: double
      # velocityY: double
      # isMoving: boolean
      # lastFrameTime: long
      # level: Level
      # currentFrame: int
      # facingRight: boolean
      # coordinate: Coordinate
      + getCoordinate(): Coordinate
      + move(double, double): void
      + getY(): double
      + getWidth(): double
      + getVelocityX(): double
      + getFrames(): List<Integer>
      + getHeight(): double
      # checkWallCollision(): void
      + setFrame(int): void
      # checkEntityCollision(): void
      + setVelocityY(double): void
      + getCurrentFrame(): int
      # handleEntityCollision(Entity): void
      + setCoordinate(Coordinate): void
      + setCurrentFrame(int): void
      + getVelocityY(): double
      + setY(double): void
      + getLevel(): Level
      + setFrames(List<Integer>): void
      # handlePacManEffect(): void
      # updateFrame(): void
      + getX(): double
      + stopFall(): void
      + update(): void
      + setHeight(double): void
      + isFacingRight(): boolean
      + getInfo(): List<String>
      # handleWallCollision(Wall): void
      + setWidth(double): void
      + setMoving(boolean): void
      + setX(double): void
      + setVelocityX(double): void
      + isDie(): boolean
    }
class Observable {
  + notifyObservers(): void
  + notifyObservers(Object): void
  + deleteObserver(Observer): void
  + deleteObservers(): void
  # setChanged(): void
  + addObserver(Observer): void
  + countObservers(): int
  # clearChanged(): void
  + hasChanged(): boolean
}



package PowerUpPackage {
    class PowerUp {
        - active: boolean
        - powerUpType: PowerUpType
        - powerUpStrategy: PowerUpStrategy
        # handleWallCollision(Wall): void
        + update(): void
        # handleEntityCollision(Entity): void
        - removePowerUp(): void
    }
    class PowerUpFactory {
        + createPowerUp(double, double, Level, PowerUpType): PowerUp
    }
    interface PowerUpStrategy <<interface>> {
        + applyPowerUp(Level): void
    }
    enum PowerUpType {
        + PowerUpType()
        + values(): PowerUpType[]
        + valueOf(String): PowerUpType
    }
    package PowerUpStrategyPackage {
        together {
            class AppleStrategy {
                + applyPowerUp(Level): void
            }
            class BlueGumStrategy {
                + applyPowerUp(Level): void
            }
            class BlueRingStrategy {
                + applyPowerUp(Level): void
            }
            class CherryStrategy {
                + applyPowerUp(Level): void
            }
            class ExtraLifeStrategy {
                + applyPowerUp(Level): void
            }
            class GlowingHeartStrategy {
                + applyPowerUp(Level): void
            }
            class GrapeStrategy {
                + applyPowerUp(Level): void
            }
            class PurpleGumStrategy {
                + applyPowerUp(Level): void
            }
            class PurpleRingStrategy {
                + applyPowerUp(Level): void
            }
            class RedCrossStrategy {
                + applyPowerUp(Level): void
            }
            class RedRIngStrategy {
                + applyPowerUp(Level): void
            }
            class SpeedShoesStrategy {
                + applyPowerUp(Level): void
            }
            class YellowGumStrategy {
                + applyPowerUp(Level): void
            }
        }

}

PowerUpFactory "<<create>>"..down> PowerUp
PowerUp *-down- PowerUpType :has
PowerUp *-left----- PowerUpStrategy :has
Entity -left-|> Observable : <<extends>>
Observable -[hidden]right> AppleStrategy
PowerUp "extends"-up--|>Entity
AppleStrategy .up.|> PowerUpStrategy
BlueGumStrategy .up.|> PowerUpStrategy
BlueRingStrategy ..up|> PowerUpStrategy
CherryStrategy .up.|> PowerUpStrategy
ExtraLifeStrategy .up.|> PowerUpStrategy
GlowingHeartStrategy .up.|> PowerUpStrategy
GrapeStrategy .up.|> PowerUpStrategy
PurpleGumStrategy .up.|> PowerUpStrategy
PurpleRingStrategy .up.|> PowerUpStrategy
RedCrossStrategy .up.|> PowerUpStrategy
RedRIngStrategy .up.|> PowerUpStrategy
SpeedShoesStrategy .up.|> PowerUpStrategy
YellowGumStrategy .up..|> PowerUpStrategy
AppleStrategy -[hidden]down> BlueGumStrategy
BlueGumStrategy -[hidden]down-> BlueRingStrategy
BlueRingStrategy -[hidden]down> CherryStrategy
CherryStrategy -[hidden]down-> ExtraLifeStrategy
ExtraLifeStrategy -[hidden]down> GlowingHeartStrategy
GlowingHeartStrategy -[hidden]down-> GrapeStrategy
GrapeStrategy -[hidden]down> PurpleGumStrategy
PurpleGumStrategy -[hidden]down-> PurpleRingStrategy
PurpleRingStrategy -[hidden]down> RedCrossStrategy
RedCrossStrategy -[hidden]down-> RedRIngStrategy
RedRIngStrategy -[hidden]down> SpeedShoesStrategy
SpeedShoesStrategy -[hidden]down> YellowGumStrategy
}



@enduml
